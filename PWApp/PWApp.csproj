<Project Sdk="Microsoft.NET.Sdk.Web">
  <PropertyGroup>
    <TargetFramework>netcoreapp2.1</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
    <DockerComposeProjectPath>..\docker-compose.dcproj</DockerComposeProjectPath>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.App" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="2.1.1" />
    <PackageReference Include="Microsoft.EntityFrameworkCore" Version="2.1.4" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="2.1.4" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="2.1.4" />
  </ItemGroup>
  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>
  <ItemGroup>
    <_ContentIncludedByDefault Remove="Pages\Error.cshtml" />
    <_ContentIncludedByDefault Remove="Pages\_ViewImports.cshtml" />
  </ItemGroup>
  <ItemGroup>
    <Folder Include="ClientApp\src\app\components" />
  </ItemGroup>
  <!--<Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">-->
  <!--&lt;!&ndash; Ensure Node.js is installed &ndash;&gt;-->
  <!--<Exec Command="node &#45;&#45;version" ContinueOnError="true">-->
  <!--<Output TaskParameter="ExitCode" PropertyName="ErrorCode" />-->
  <!--</Exec>-->
  <!--<Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />-->
  <!--<Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />-->
  <!--<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />-->
  <!--</Target>-->
  <!--<Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">-->
  <!--&lt;!&ndash; As part of publishing, ensure the JS resources are freshly built in production mode &ndash;&gt;-->
  <!--<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />-->
  <!--<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build &#45;&#45; &#45;&#45;prod" />-->
  <!--<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr &#45;&#45; &#45;&#45;prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />-->
  <!--&lt;!&ndash; Include the newly-built files in the publish output &ndash;&gt;-->
  <!--<ItemGroup>-->
  <!--<DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />-->
  <!--<DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />-->
  <!--<ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">-->
  <!--<RelativePath>%(DistFiles.Identity)</RelativePath>-->
  <!--<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>-->
  <!--</ResolvedFileToPublish>-->
  <!--</ItemGroup>-->
  <!--</Target>-->
</Project>